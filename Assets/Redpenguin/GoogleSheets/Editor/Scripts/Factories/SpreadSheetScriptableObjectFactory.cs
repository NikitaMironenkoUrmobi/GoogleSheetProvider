using System;
using System.Collections.Generic;
using System.IO;
using Redpenguin.GoogleSheets.Editor.Utils;
using UnityEditor;
using UnityEngine;

namespace Redpenguin.GoogleSheets.Editor.Factories
{
  public class SpreadSheetScriptableObjectFactory
  {
    private const string SavePath = "Assets/GoogleSheets/AutoGenerated/Resources/SheetsData";
    private readonly string _savePath = $"{Application.dataPath}/GoogleSheets/AutoGenerated/Resources/SheetsData";
    
    private void CreateDirectories()
    {
      if (!Directory.Exists(_savePath))
      {
        Directory.CreateDirectory(_savePath);
      }
    }

    public void CreateScriptableObjects(List<Type> types)
    {
      if(types.Count == 0) return;
      CreateDirectories();
      foreach (var type in types)
      {
        var asset = ScriptableObject.CreateInstance(type);
        AssetDatabase.CreateAsset(asset, $"{SavePath}/{type.Name}.asset");
      }
      AssetDatabase.SaveAssets();
      AssetDatabase.Refresh();
      
      Debug.Log("Scriptable Objects was created!".WithColor(ColorExt.CompletedColor));
    }

    public void DeleteAllAssets()
    {
      AssetDatabase.DeleteAsset(SavePath);
      AssetDatabase.SaveAssets();
      // var di = new DirectoryInfo(SavePath);
      //
      // foreach (var file in di.EnumerateFiles())
      // {
      //   Debug.Log($"{file.Name} delete");
      //   file.Delete(); 
      // }
    }
  }
}